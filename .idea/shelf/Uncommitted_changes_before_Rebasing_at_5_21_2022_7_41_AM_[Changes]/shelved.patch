Index: hw/hw2/hw2.ipynb
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n \"cells\": [\r\n  {\r\n   \"cell_type\": \"markdown\",\r\n   \"metadata\": {},\r\n   \"source\": [\r\n    \"# CPSC 330 - Applied Machine Learning \\n\",\r\n    \"\\n\",\r\n    \"## Homework 2: Decision trees and machine learning fundamentals \\n\",\r\n    \"### Associated lectures: Lectures 2 and 3 \\n\",\r\n    \"\\n\",\r\n    \"**Due date: Tuesday, May 24, 2022 at 18:00**\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 9,\r\n   \"metadata\": {},\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"import matplotlib.pyplot as plt\\n\",\r\n    \"import numpy as np\\n\",\r\n    \"import pandas as pd\\n\",\r\n    \"\\n\",\r\n    \"plt.rcParams[\\\"font.size\\\"] = 16\\n\",\r\n    \"\\n\",\r\n    \"from sklearn.model_selection import cross_val_score, cross_validate, train_test_split\\n\",\r\n    \"from sklearn.tree import DecisionTreeClassifier\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"markdown\",\r\n   \"metadata\": {},\r\n   \"source\": []\r\n  },\r\n  {\r\n   \"cell_type\": \"markdown\",\r\n   \"metadata\": {},\r\n   \"source\": [\r\n    \"## Instructions\\n\",\r\n    \"rubric={points:3}\\n\",\r\n    \"\\n\",\r\n    \"Follow the [homework submission instructions](https://github.com/UBC-CS/cpsc330/blob/master/docs/homework_instructions.md). In particular, **see the note about not pushing downloaded data to your repo**.\\n\",\r\n    \"\\n\",\r\n    \"You are welcome to broadly discuss questions with your classmates but your final answers must be your own. **We are not allowing group submission for this homework assignment.**  \"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"markdown\",\r\n   \"metadata\": {},\r\n   \"source\": [\r\n    \"## Introducing the data set\\n\",\r\n    \" \\n\",\r\n    \"For this  assignment you'll be looking at Kaggle's [Spotify Song Attributes](https://www.kaggle.com/geomack/spotifyclassification/) dataset.\\n\",\r\n    \"The dataset contains a number of features of songs from 2017 and a binary variable `target` that represents whether the user liked the song (encoded as 1) or not (encoded as 0). See the documentation of all the features [here](https://developer.spotify.com/documentation/web-api/reference/tracks/get-audio-features/). \\n\",\r\n    \"\\n\",\r\n    \"This dataset is publicly available on Kaggle, and you will have to download it yourself. Follow the steps below to get the data CSV. \\n\",\r\n    \"\\n\",\r\n    \"1. If you do not have an account with [Kaggle](https://www.kaggle.com/), you will first need to create one (it's free).\\n\",\r\n    \"2. Login to your account and [download](https://www.kaggle.com/geomack/spotifyclassification/download) the dataset.\\n\",\r\n    \"3. Unzip the data file if needed, then rename it to `spotify.csv`, and move it to the same directory as this notebook.\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"markdown\",\r\n   \"metadata\": {},\r\n   \"source\": [\r\n    \"## Exercise 1: Exploratory data analysis\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"markdown\",\r\n   \"metadata\": {\r\n    \"nbgrader\": {\r\n     \"grade\": false,\r\n     \"grade_id\": \"cell-d4d478b6cdc9bf88\",\r\n     \"locked\": true,\r\n     \"schema_version\": 3,\r\n     \"solution\": false\r\n    }\r\n   },\r\n   \"source\": [\r\n    \"#### 1(a) \\n\",\r\n    \"rubric={points:2}\\n\",\r\n    \"\\n\",\r\n    \"Read in the data CSV and store it as a pandas dataframe named `spotify_df`. The first column of the .csv file should be set as the index.\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 3,\r\n   \"metadata\": {\r\n    \"nbgrader\": {\r\n     \"grade\": true,\r\n     \"grade_id\": \"cell-4f3f14b59fd7e6b8\",\r\n     \"locked\": false,\r\n     \"points\": 0,\r\n     \"schema_version\": 3,\r\n     \"solution\": true,\r\n     \"task\": false\r\n    }\r\n   },\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"spotify_df = pd.read_csv('spotify.csv', index_col=0)\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"markdown\",\r\n   \"metadata\": {},\r\n   \"source\": [\r\n    \"#### 1(b)\\n\",\r\n    \"rubric={points:2}\\n\",\r\n    \"\\n\",\r\n    \"Run the following line of code to split the data. How many training and test examples do we have?\\n\",\r\n    \"\\n\",\r\n    \"> Note: we are setting the `random_state` so that everyone has the same split on their assignments. This will make it easier for the TAs to grade.\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 4,\r\n   \"metadata\": {},\r\n   \"outputs\": [\r\n    {\r\n     \"data\": {\r\n      \"text/plain\": [\r\n       \"((1512, 16), (505, 16))\"\r\n      ]\r\n     },\r\n     \"execution_count\": 4,\r\n     \"metadata\": {},\r\n     \"output_type\": \"execute_result\"\r\n    }\r\n   ],\r\n   \"source\": [\r\n    \"df_train, df_test = train_test_split(spotify_df, test_size=0.25, random_state=123)\\n\",\r\n    \"df_train.shape, df_test.shape\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"markdown\",\r\n   \"metadata\": {},\r\n   \"source\": [\r\n    \"1512 training examples and 505 test examples\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"markdown\",\r\n   \"metadata\": {},\r\n   \"source\": [\r\n    \"#### 1(c)\\n\",\r\n    \"rubric={points:3}\\n\",\r\n    \"\\n\",\r\n    \"- Print out the output of `describe()` **on the training split**. This will compute some summary statistics of the numeric columns.\\n\",\r\n    \"- Which feature has the smallest range? \\n\",\r\n    \"\\n\",\r\n    \"> Hint: You can subtract the min value from the max value of the column to get the range.\\n\",\r\n    \"\\n\",\r\n    \"Note that `describe` returns another DataFrame.\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 5,\r\n   \"metadata\": {},\r\n   \"outputs\": [\r\n    {\r\n     \"name\": \"stdout\",\r\n     \"output_type\": \"stream\",\r\n     \"text\": [\r\n      \"       acousticness  danceability    duration_ms       energy  \\\\\\n\",\r\n      \"count   1512.000000   1512.000000    1512.000000  1512.000000   \\n\",\r\n      \"mean       0.185337      0.617565  247606.240741     0.682022   \\n\",\r\n      \"std        0.257866      0.163086   81841.143743     0.211498   \\n\",\r\n      \"min        0.000005      0.122000   16042.000000     0.014800   \\n\",\r\n      \"25%        0.009460      0.512000  200072.000000     0.564000   \\n\",\r\n      \"50%        0.063700      0.629500  230100.000000     0.713500   \\n\",\r\n      \"75%        0.253000      0.738250  274041.750000     0.847250   \\n\",\r\n      \"max        0.995000      0.984000  849960.000000     0.997000   \\n\",\r\n      \"\\n\",\r\n      \"       instrumentalness          key     liveness     loudness         mode  \\\\\\n\",\r\n      \"count       1512.000000  1512.000000  1512.000000  1512.000000  1512.000000   \\n\",\r\n      \"mean           0.139041     5.406746     0.189816    -7.089587     0.619048   \\n\",\r\n      \"std            0.279536     3.635880     0.154115     3.841885     0.485782   \\n\",\r\n      \"min            0.000000     0.000000     0.018800   -33.097000     0.000000   \\n\",\r\n      \"25%            0.000000     2.000000     0.092200    -8.389000     0.000000   \\n\",\r\n      \"50%            0.000076     6.000000     0.127000    -6.239000     1.000000   \\n\",\r\n      \"75%            0.061100     9.000000     0.243000    -4.756000     1.000000   \\n\",\r\n      \"max            0.976000    11.000000     0.969000    -0.307000     1.000000   \\n\",\r\n      \"\\n\",\r\n      \"       speechiness        tempo  time_signature      valence       target  \\n\",\r\n      \"count  1512.000000  1512.000000     1512.000000  1512.000000  1512.000000  \\n\",\r\n      \"mean      0.090843   121.978905        3.964947     0.501758     0.511243  \\n\",\r\n      \"std       0.086574    27.121977        0.253555     0.246599     0.500039  \\n\",\r\n      \"min       0.023100    47.859000        1.000000     0.035900     0.000000  \\n\",\r\n      \"25%       0.037375   100.500750        4.000000     0.298750     0.000000  \\n\",\r\n      \"50%       0.055050   121.974000        4.000000     0.501000     1.000000  \\n\",\r\n      \"75%       0.107000   137.938250        4.000000     0.694000     1.000000  \\n\",\r\n      \"max       0.816000   219.331000        5.000000     0.992000     1.000000  \\n\"\r\n     ]\r\n    },\r\n    {\r\n     \"data\": {\r\n      \"text/plain\": [\r\n       \"'speechiness'\"\r\n      ]\r\n     },\r\n     \"execution_count\": 5,\r\n     \"metadata\": {},\r\n     \"output_type\": \"execute_result\"\r\n    }\r\n   ],\r\n   \"source\": [\r\n    \"desc = df_train.describe()\\n\",\r\n    \"print(desc)\\n\",\r\n    \"ranges = desc.loc['max'] - desc.loc['min']\\n\",\r\n    \"df_train.columns[np.argmin(ranges)]\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"markdown\",\r\n   \"metadata\": {},\r\n   \"source\": [\r\n    \"speechiness\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"markdown\",\r\n   \"metadata\": {\r\n    \"nbgrader\": {\r\n     \"grade\": false,\r\n     \"grade_id\": \"cell-b33320bcf667584a\",\r\n     \"locked\": true,\r\n     \"schema_version\": 3,\r\n     \"solution\": false\r\n    }\r\n   },\r\n   \"source\": [\r\n    \"#### 1(d) \\n\",\r\n    \"rubric={points:5}\\n\",\r\n    \"\\n\",\r\n    \"Let's focus on the following features:\\n\",\r\n    \"\\n\",\r\n    \"- danceability\\n\",\r\n    \"- tempo\\n\",\r\n    \"- energy\\n\",\r\n    \"- valence\\n\",\r\n    \"\\n\",\r\n    \"For each of these features (in order), produce a histogram that shows the distribution of the feature values in the training set, **separated for positive and negative examples**. \\n\",\r\n    \"By \\\"positive examples\\\" we mean target = 1 (user liked the song, positive sentiment) and by \\\"negative examples\\\" we mean target = 0 (used disliked the song, negative sentiment). As an example, here is what the histogram would look like for a different feature, loudness:\\n\",\r\n    \"\\n\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"markdown\",\r\n   \"metadata\": {},\r\n   \"source\": [\r\n    \"<img src='loudness.png' width=\\\"400\\\">\\n\",\r\n    \"\\n\",\r\n    \"(You don't have to match all the details exactly, such as colour, but your histograms should look something like this, with a reasonable number of bins to see the shape of the distribution.) As shown above, there are two different histograms, one for target = 0 and one for target = 1, and they are overlaid on top of each other. The histogram above shows that extremely quiet songs tend to be disliked (more blue bars than orange on the left) and very loud songs also tend to be disliked (more blue than orange on the far right).\\n\",\r\n    \"\\n\",\r\n    \"To adhere to the [DRY (Don't Repeat Yourself)](https://en.wikipedia.org/wiki/Don%27t_repeat_yourself) principle, make sure you use a `for` loop for your plotting, rather than repeating the plotting code 4 times. For this to work, I used `plt.show()` at the end of your loop, which draws the figure and resets the canvas for your next plot.\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"markdown\",\r\n   \"metadata\": {},\r\n   \"source\": [\r\n    \"Here is some code that separates out the dataset into positive and negative examples, to help you get started:\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 20,\r\n   \"metadata\": {},\r\n   \"outputs\": [\r\n    {\r\n     \"data\": {\r\n      \"image/png\": \"\\n\",\r\n      \"text/plain\": [\r\n       \"<Figure size 432x288 with 1 Axes>\"\r\n      ]\r\n     },\r\n     \"metadata\": {\r\n      \"needs_background\": \"light\"\r\n     },\r\n     \"output_type\": \"display_data\"\r\n    },\r\n    {\r\n     \"data\": {\r\n      \"image/png\": \"\\n\",\r\n      \"text/plain\": [\r\n       \"<Figure size 432x288 with 1 Axes>\"\r\n      ]\r\n     },\r\n     \"metadata\": {\r\n      \"needs_background\": \"light\"\r\n     },\r\n     \"output_type\": \"display_data\"\r\n    },\r\n    {\r\n     \"data\": {\r\n      \"image/png\": \"\\n\",\r\n      \"text/plain\": [\r\n       \"<Figure size 432x288 with 1 Axes>\"\r\n      ]\r\n     },\r\n     \"metadata\": {\r\n      \"needs_background\": \"light\"\r\n     },\r\n     \"output_type\": \"display_data\"\r\n    },\r\n    {\r\n     \"data\": {\r\n      \"image/png\": \"\\n\",\r\n      \"text/plain\": [\r\n       \"<Figure size 432x288 with 1 Axes>\"\r\n      ]\r\n     },\r\n     \"metadata\": {\r\n      \"needs_background\": \"light\"\r\n     },\r\n     \"output_type\": \"display_data\"\r\n    }\r\n   ],\r\n   \"source\": [\r\n    \"negative_examples = df_train.query(\\\"target == 0\\\")\\n\",\r\n    \"positive_examples = df_train.query(\\\"target == 1\\\")\\n\",\r\n    \"for feature in ['danceability', 'tempo', 'energy', 'valence']:\\n\",\r\n    \"    plt.xlabel(feature)\\n\",\r\n    \"    plt.ylabel('count')\\n\",\r\n    \"    plt.title(f'Histogram of {feature} by target class')\\n\",\r\n    \"    plt.hist(negative_examples[[feature]], bins=50, facecolor='skyblue', alpha=0.5, label=\\\"0\\\")\\n\",\r\n    \"    plt.hist(positive_examples[[feature]], bins=50, facecolor='orange', alpha=0.5, label=\\\"1\\\")\\n\",\r\n    \"    plt.legend(loc=\\\"upper left\\\")\\n\",\r\n    \"    plt.show()\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"markdown\",\r\n   \"metadata\": {},\r\n   \"source\": []\r\n  },\r\n  {\r\n   \"cell_type\": \"markdown\",\r\n   \"metadata\": {},\r\n   \"source\": [\r\n    \"#### 1(e)\\n\",\r\n    \"rubric={points:4}\\n\",\r\n    \"\\n\",\r\n    \"Let's say you had to make a decision stump (decision tree with depth 1), _by hand_, to predict the target class. Just from looking at the plots above, describe a reasonable split (feature name and threshold) and what class you would predict in the two cases. For example, in the loudness histogram provided earlier on, it seems that very large values of loudness are generally disliked (more blue on the right side of the histogram), so you might answer something like this: \\\"A reasonable split would be to predict 0 if loudness > -5 (and predict 1 otherwise).\\\"\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"markdown\",\r\n   \"metadata\": {},\r\n   \"source\": [\r\n    \"A reasonable split would be to predict 0 if energy < 0.2, and to predict 1 otherwise.\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"markdown\",\r\n   \"metadata\": {},\r\n   \"source\": [\r\n    \"#### 1(f)\\n\",\r\n    \"rubric={points:2}\\n\",\r\n    \"\\n\",\r\n    \"Let's say that, for a particular feature, the histograms of that feature are identical for the two target classes. Does that mean the feature is not useful for predicting the target class?\\n\",\r\n    \"\\n\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"markdown\",\r\n   \"metadata\": {},\r\n   \"source\": [\r\n    \"No. The feature may still be useful when used in conjunction with other features.\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"markdown\",\r\n   \"metadata\": {\r\n    \"nbgrader\": {\r\n     \"grade\": false,\r\n     \"grade_id\": \"cell-86f9e0c649669daf\",\r\n     \"locked\": true,\r\n     \"schema_version\": 3,\r\n     \"solution\": false,\r\n     \"task\": false\r\n    }\r\n   },\r\n   \"source\": [\r\n    \"#### 1(g) \\n\",\r\n    \"rubric={points:2}\\n\",\r\n    \"\\n\",\r\n    \"Note that the dataset includes two free text features labeled `song_title` and `artist`:\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 21,\r\n   \"metadata\": {},\r\n   \"outputs\": [\r\n    {\r\n     \"data\": {\r\n      \"text/html\": [\r\n       \"<div>\\n\",\r\n       \"<style scoped>\\n\",\r\n       \"    .dataframe tbody tr th:only-of-type {\\n\",\r\n       \"        vertical-align: middle;\\n\",\r\n       \"    }\\n\",\r\n       \"\\n\",\r\n       \"    .dataframe tbody tr th {\\n\",\r\n       \"        vertical-align: top;\\n\",\r\n       \"    }\\n\",\r\n       \"\\n\",\r\n       \"    .dataframe thead th {\\n\",\r\n       \"        text-align: right;\\n\",\r\n       \"    }\\n\",\r\n       \"</style>\\n\",\r\n       \"<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n\",\r\n       \"  <thead>\\n\",\r\n       \"    <tr style=\\\"text-align: right;\\\">\\n\",\r\n       \"      <th></th>\\n\",\r\n       \"      <th>song_title</th>\\n\",\r\n       \"      <th>artist</th>\\n\",\r\n       \"    </tr>\\n\",\r\n       \"  </thead>\\n\",\r\n       \"  <tbody>\\n\",\r\n       \"    <tr>\\n\",\r\n       \"      <th>1396</th>\\n\",\r\n       \"      <td>All in Vain</td>\\n\",\r\n       \"      <td>Mot</td>\\n\",\r\n       \"    </tr>\\n\",\r\n       \"    <tr>\\n\",\r\n       \"      <th>641</th>\\n\",\r\n       \"      <td>One of Those Nights</td>\\n\",\r\n       \"      <td>Juicy J</td>\\n\",\r\n       \"    </tr>\\n\",\r\n       \"    <tr>\\n\",\r\n       \"      <th>1765</th>\\n\",\r\n       \"      <td>Take Me As I Am</td>\\n\",\r\n       \"      <td>Wyclef Jean</td>\\n\",\r\n       \"    </tr>\\n\",\r\n       \"    <tr>\\n\",\r\n       \"      <th>1801</th>\\n\",\r\n       \"      <td>Save My Soul</td>\\n\",\r\n       \"      <td>JoJo</td>\\n\",\r\n       \"    </tr>\\n\",\r\n       \"    <tr>\\n\",\r\n       \"      <th>1624</th>\\n\",\r\n       \"      <td>Save the World - Radio Mix</td>\\n\",\r\n       \"      <td>Swedish House Mafia</td>\\n\",\r\n       \"    </tr>\\n\",\r\n       \"  </tbody>\\n\",\r\n       \"</table>\\n\",\r\n       \"</div>\"\r\n      ],\r\n      \"text/plain\": [\r\n       \"                      song_title               artist\\n\",\r\n       \"1396                 All in Vain                  Mot\\n\",\r\n       \"641          One of Those Nights              Juicy J\\n\",\r\n       \"1765             Take Me As I Am          Wyclef Jean\\n\",\r\n       \"1801                Save My Soul                 JoJo\\n\",\r\n       \"1624  Save the World - Radio Mix  Swedish House Mafia\"\r\n      ]\r\n     },\r\n     \"execution_count\": 21,\r\n     \"metadata\": {},\r\n     \"output_type\": \"execute_result\"\r\n    }\r\n   ],\r\n   \"source\": [\r\n    \"df_train[[\\\"song_title\\\", \\\"artist\\\"]].head()\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"markdown\",\r\n   \"metadata\": {},\r\n   \"source\": [\r\n    \"- Do you think these features could be useful in predicting whether the user liked the song or not? \\n\",\r\n    \"- Would there be any difficulty in using them in your model?   \"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"markdown\",\r\n   \"metadata\": {\r\n    \"nbgrader\": {\r\n     \"grade\": true,\r\n     \"grade_id\": \"cell-dce517defdc16360\",\r\n     \"locked\": false,\r\n     \"points\": 0,\r\n     \"schema_version\": 3,\r\n     \"solution\": true,\r\n     \"task\": false\r\n    }\r\n   },\r\n   \"source\": [\r\n    \"These features could be useful.\\n\",\r\n    \"But they cannot be used as is since they are non-numerical.\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"markdown\",\r\n   \"metadata\": {},\r\n   \"source\": [\r\n    \"<br><br>\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"markdown\",\r\n   \"metadata\": {\r\n    \"nbgrader\": {\r\n     \"grade\": false,\r\n     \"grade_id\": \"cell-1440876fbc49ead5\",\r\n     \"locked\": true,\r\n     \"schema_version\": 3,\r\n     \"solution\": false,\r\n     \"task\": false\r\n    }\r\n   },\r\n   \"source\": [\r\n    \"## Exercise 2: Using sklearn to build a decision tree classifier\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"markdown\",\r\n   \"metadata\": {\r\n    \"nbgrader\": {\r\n     \"grade\": false,\r\n     \"grade_id\": \"cell-706403e72adade4b\",\r\n     \"locked\": true,\r\n     \"schema_version\": 3,\r\n     \"solution\": false\r\n    }\r\n   },\r\n   \"source\": [\r\n    \"#### 2(a) \\n\",\r\n    \"rubric={points:2}\\n\",\r\n    \"\\n\",\r\n    \"- Create `X_train` and `y_train` and `X_test` and `y_test` from `df_train` and `df_test` above. Skip the `song_title` and `artist` features for now. \\n\",\r\n    \"- Fit a `DecisionTreeClassifier` on the train set.\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 97,\r\n   \"metadata\": {\r\n    \"nbgrader\": {\r\n     \"grade\": true,\r\n     \"grade_id\": \"cell-859d4a70667da85d\",\r\n     \"locked\": false,\r\n     \"points\": 0,\r\n     \"schema_version\": 3,\r\n     \"solution\": true,\r\n     \"task\": false\r\n    }\r\n   },\r\n   \"outputs\": [\r\n    {\r\n     \"data\": {\r\n      \"text/plain\": [\r\n       \"DecisionTreeClassifier(max_depth=3)\"\r\n      ]\r\n     },\r\n     \"execution_count\": 97,\r\n     \"metadata\": {},\r\n     \"output_type\": \"execute_result\"\r\n    }\r\n   ],\r\n   \"source\": [\r\n    \"X_train = df_train.drop(['target', 'song_title', 'artist'], axis=1)\\n\",\r\n    \"y_train = df_train[['target']]\\n\",\r\n    \"X_test = df_test.drop(['target', 'song_title', 'artist'], axis=1)\\n\",\r\n    \"y_test = df_test[['target']]\\n\",\r\n    \"\\n\",\r\n    \"model = DecisionTreeClassifier(max_depth=3)\\n\",\r\n    \"model.fit(X_train, y_train)\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"markdown\",\r\n   \"metadata\": {\r\n    \"nbgrader\": {\r\n     \"grade\": false,\r\n     \"grade_id\": \"cell-43ac6f91bc3bd9da\",\r\n     \"locked\": true,\r\n     \"schema_version\": 3,\r\n     \"solution\": false\r\n    }\r\n   },\r\n   \"source\": [\r\n    \"#### 2(b)\\n\",\r\n    \"rubric={points:2}\\n\",\r\n    \"\\n\",\r\n    \"Use the `predict` method to predict the class of the first example in your `X_train`. Is the prediction correct? That is, does it match with the corresponding class in `y_train`?  \\n\",\r\n    \"\\n\",\r\n    \"> Hint: you can grab the first example with `X_train.iloc[[0]]`.\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 98,\r\n   \"metadata\": {},\r\n   \"outputs\": [\r\n    {\r\n     \"data\": {\r\n      \"text/plain\": [\r\n       \"0\"\r\n      ]\r\n     },\r\n     \"execution_count\": 98,\r\n     \"metadata\": {},\r\n     \"output_type\": \"execute_result\"\r\n    }\r\n   ],\r\n   \"source\": [\r\n    \"model.predict(X_train.iloc[[0]])[0]\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 99,\r\n   \"metadata\": {},\r\n   \"outputs\": [\r\n    {\r\n     \"data\": {\r\n      \"text/plain\": [\r\n       \"0\"\r\n      ]\r\n     },\r\n     \"execution_count\": 99,\r\n     \"metadata\": {},\r\n     \"output_type\": \"execute_result\"\r\n    }\r\n   ],\r\n   \"source\": [\r\n    \"y_train.iloc[0]['target']\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"markdown\",\r\n   \"metadata\": {},\r\n   \"source\": [\r\n    \"The prediction is correct.\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"markdown\",\r\n   \"metadata\": {},\r\n   \"source\": [\r\n    \"#### 2(c) \\n\",\r\n    \"rubric={points:2}\\n\",\r\n    \"\\n\",\r\n    \"Use the `cross_val_score` function on your training set to compute the 10-fold cross-validation accuracy of your tree. \"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 100,\r\n   \"metadata\": {},\r\n   \"outputs\": [\r\n    {\r\n     \"data\": {\r\n      \"text/html\": [\r\n       \"<div>\\n\",\r\n       \"<style scoped>\\n\",\r\n       \"    .dataframe tbody tr th:only-of-type {\\n\",\r\n       \"        vertical-align: middle;\\n\",\r\n       \"    }\\n\",\r\n       \"\\n\",\r\n       \"    .dataframe tbody tr th {\\n\",\r\n       \"        vertical-align: top;\\n\",\r\n       \"    }\\n\",\r\n       \"\\n\",\r\n       \"    .dataframe thead th {\\n\",\r\n       \"        text-align: right;\\n\",\r\n       \"    }\\n\",\r\n       \"</style>\\n\",\r\n       \"<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n\",\r\n       \"  <thead>\\n\",\r\n       \"    <tr style=\\\"text-align: right;\\\">\\n\",\r\n       \"      <th></th>\\n\",\r\n       \"      <th>validation_score</th>\\n\",\r\n       \"    </tr>\\n\",\r\n       \"  </thead>\\n\",\r\n       \"  <tbody>\\n\",\r\n       \"    <tr>\\n\",\r\n       \"      <th>0</th>\\n\",\r\n       \"      <td>0.730263</td>\\n\",\r\n       \"    </tr>\\n\",\r\n       \"    <tr>\\n\",\r\n       \"      <th>1</th>\\n\",\r\n       \"      <td>0.697368</td>\\n\",\r\n       \"    </tr>\\n\",\r\n       \"    <tr>\\n\",\r\n       \"      <th>2</th>\\n\",\r\n       \"      <td>0.615894</td>\\n\",\r\n       \"    </tr>\\n\",\r\n       \"    <tr>\\n\",\r\n       \"      <th>3</th>\\n\",\r\n       \"      <td>0.662252</td>\\n\",\r\n       \"    </tr>\\n\",\r\n       \"    <tr>\\n\",\r\n       \"      <th>4</th>\\n\",\r\n       \"      <td>0.708609</td>\\n\",\r\n       \"    </tr>\\n\",\r\n       \"    <tr>\\n\",\r\n       \"      <th>5</th>\\n\",\r\n       \"      <td>0.682119</td>\\n\",\r\n       \"    </tr>\\n\",\r\n       \"    <tr>\\n\",\r\n       \"      <th>6</th>\\n\",\r\n       \"      <td>0.715232</td>\\n\",\r\n       \"    </tr>\\n\",\r\n       \"    <tr>\\n\",\r\n       \"      <th>7</th>\\n\",\r\n       \"      <td>0.708609</td>\\n\",\r\n       \"    </tr>\\n\",\r\n       \"    <tr>\\n\",\r\n       \"      <th>8</th>\\n\",\r\n       \"      <td>0.728477</td>\\n\",\r\n       \"    </tr>\\n\",\r\n       \"    <tr>\\n\",\r\n       \"      <th>9</th>\\n\",\r\n       \"      <td>0.774834</td>\\n\",\r\n       \"    </tr>\\n\",\r\n       \"  </tbody>\\n\",\r\n       \"</table>\\n\",\r\n       \"</div>\"\r\n      ],\r\n      \"text/plain\": [\r\n       \"   validation_score\\n\",\r\n       \"0          0.730263\\n\",\r\n       \"1          0.697368\\n\",\r\n       \"2          0.615894\\n\",\r\n       \"3          0.662252\\n\",\r\n       \"4          0.708609\\n\",\r\n       \"5          0.682119\\n\",\r\n       \"6          0.715232\\n\",\r\n       \"7          0.708609\\n\",\r\n       \"8          0.728477\\n\",\r\n       \"9          0.774834\"\r\n      ]\r\n     },\r\n     \"execution_count\": 100,\r\n     \"metadata\": {},\r\n     \"output_type\": \"execute_result\"\r\n    }\r\n   ],\r\n   \"source\": [\r\n    \"cs = cross_val_score(model, X_train, y_train, cv=10)\\n\",\r\n    \"pd.DataFrame(cs, columns=['validation_score'])\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 101,\r\n   \"metadata\": {},\r\n   \"outputs\": [\r\n    {\r\n     \"name\": \"stdout\",\r\n     \"output_type\": \"stream\",\r\n     \"text\": [\r\n      \"Mean validation score 0.702\\n\",\r\n      \"SD validation score 0.041\\n\"\r\n     ]\r\n    }\r\n   ],\r\n   \"source\": [\r\n    \"print(f'Mean validation score {np.mean(cs):.3f}')\\n\",\r\n    \"print(f'SD validation score {np.std(cs):.3f}')\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"markdown\",\r\n   \"metadata\": {},\r\n   \"source\": [\r\n    \"#### 2(d)\\n\",\r\n    \"rubric={points:2}\\n\",\r\n    \"\\n\",\r\n    \"The above is useful, but we would like to see the training accuracy as well. \\n\",\r\n    \"\\n\",\r\n    \"- Compute the 10-fold cross-validation again but this time using the `cross_validate` function with `return_train_score=True`. \\n\",\r\n    \"- Print out both the cross-validation score and the training score.\\n\",\r\n    \"- Is your cross-validation score exactly the same as what you got in the previous part? Very briefly discuss.\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 102,\r\n   \"metadata\": {},\r\n   \"outputs\": [\r\n    {\r\n     \"name\": \"stdout\",\r\n     \"output_type\": \"stream\",\r\n     \"text\": [\r\n      \"Mean validation score 0.702\\n\",\r\n      \"Mean train score 0.735\\n\"\r\n     ]\r\n    },\r\n    {\r\n     \"data\": {\r\n      \"text/html\": [\r\n       \"<div>\\n\",\r\n       \"<style scoped>\\n\",\r\n       \"    .dataframe tbody tr th:only-of-type {\\n\",\r\n       \"        vertical-align: middle;\\n\",\r\n       \"    }\\n\",\r\n       \"\\n\",\r\n       \"    .dataframe tbody tr th {\\n\",\r\n       \"        vertical-align: top;\\n\",\r\n       \"    }\\n\",\r\n       \"\\n\",\r\n       \"    .dataframe thead th {\\n\",\r\n       \"        text-align: right;\\n\",\r\n       \"    }\\n\",\r\n       \"</style>\\n\",\r\n       \"<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n\",\r\n       \"  <thead>\\n\",\r\n       \"    <tr style=\\\"text-align: right;\\\">\\n\",\r\n       \"      <th></th>\\n\",\r\n       \"      <th>fit_time</th>\\n\",\r\n       \"      <th>score_time</th>\\n\",\r\n       \"      <th>test_score</th>\\n\",\r\n       \"      <th>train_score</th>\\n\",\r\n       \"    </tr>\\n\",\r\n       \"  </thead>\\n\",\r\n       \"  <tbody>\\n\",\r\n       \"    <tr>\\n\",\r\n       \"      <th>0</th>\\n\",\r\n       \"      <td>0.004986</td>\\n\",\r\n       \"      <td>0.001997</td>\\n\",\r\n       \"      <td>0.730263</td>\\n\",\r\n       \"      <td>0.726471</td>\\n\",\r\n       \"    </tr>\\n\",\r\n       \"    <tr>\\n\",\r\n       \"      <th>1</th>\\n\",\r\n       \"      <td>0.005013</td>\\n\",\r\n       \"      <td>0.000999</td>\\n\",\r\n       \"      <td>0.697368</td>\\n\",\r\n       \"      <td>0.726471</td>\\n\",\r\n       \"    </tr>\\n\",\r\n       \"    <tr>\\n\",\r\n       \"      <th>2</th>\\n\",\r\n       \"      <td>0.004959</td>\\n\",\r\n       \"      <td>0.001993</td>\\n\",\r\n       \"      <td>0.615894</td>\\n\",\r\n       \"      <td>0.736958</td>\\n\",\r\n       \"    </tr>\\n\",\r\n       \"    <tr>\\n\",\r\n       \"      <th>3</th>\\n\",\r\n       \"      <td>0.004985</td>\\n\",\r\n       \"      <td>0.000998</td>\\n\",\r\n       \"      <td>0.662252</td>\\n\",\r\n       \"      <td>0.736958</td>\\n\",\r\n       \"    </tr>\\n\",\r\n       \"    <tr>\\n\",\r\n       \"      <th>4</th>\\n\",\r\n       \"      <td>0.004987</td>\\n\",\r\n       \"      <td>0.001995</td>\\n\",\r\n       \"      <td>0.708609</td>\\n\",\r\n       \"      <td>0.731815</td>\\n\",\r\n       \"    </tr>\\n\",\r\n       \"    <tr>\\n\",\r\n       \"      <th>5</th>\\n\",\r\n       \"      <td>0.004986</td>\\n\",\r\n       \"      <td>0.000998</td>\\n\",\r\n       \"      <td>0.682119</td>\\n\",\r\n       \"      <td>0.734754</td>\\n\",\r\n       \"    </tr>\\n\",\r\n       \"    <tr>\\n\",\r\n       \"      <th>6</th>\\n\",\r\n       \"      <td>0.004986</td>\\n\",\r\n       \"      <td>0.000998</td>\\n\",\r\n       \"      <td>0.715232</td>\\n\",\r\n       \"      <td>0.736958</td>\\n\",\r\n       \"    </tr>\\n\",\r\n       \"    <tr>\\n\",\r\n       \"      <th>7</th>\\n\",\r\n       \"      <td>0.004986</td>\\n\",\r\n       \"      <td>0.001995</td>\\n\",\r\n       \"      <td>0.708609</td>\\n\",\r\n       \"      <td>0.745775</td>\\n\",\r\n       \"    </tr>\\n\",\r\n       \"    <tr>\\n\",\r\n       \"      <th>8</th>\\n\",\r\n       \"      <td>0.004987</td>\\n\",\r\n       \"      <td>0.000997</td>\\n\",\r\n       \"      <td>0.728477</td>\\n\",\r\n       \"      <td>0.745040</td>\\n\",\r\n       \"    </tr>\\n\",\r\n       \"    <tr>\\n\",\r\n       \"      <th>9</th>\\n\",\r\n       \"      <td>0.004987</td>\\n\",\r\n       \"      <td>0.000997</td>\\n\",\r\n       \"      <td>0.774834</td>\\n\",\r\n       \"      <td>0.724467</td>\\n\",\r\n       \"    </tr>\\n\",\r\n       \"  </tbody>\\n\",\r\n       \"</table>\\n\",\r\n       \"</div>\"\r\n      ],\r\n      \"text/plain\": [\r\n       \"   fit_time  score_time  test_score  train_score\\n\",\r\n       \"0  0.004986    0.001997    0.730263     0.726471\\n\",\r\n       \"1  0.005013    0.000999    0.697368     0.726471\\n\",\r\n       \"2  0.004959    0.001993    0.615894     0.736958\\n\",\r\n       \"3  0.004985    0.000998    0.662252     0.736958\\n\",\r\n       \"4  0.004987    0.001995    0.708609     0.731815\\n\",\r\n       \"5  0.004986    0.000998    0.682119     0.734754\\n\",\r\n       \"6  0.004986    0.000998    0.715232     0.736958\\n\",\r\n       \"7  0.004986    0.001995    0.708609     0.745775\\n\",\r\n       \"8  0.004987    0.000997    0.728477     0.745040\\n\",\r\n       \"9  0.004987    0.000997    0.774834     0.724467\"\r\n      ]\r\n     },\r\n     \"execution_count\": 102,\r\n     \"metadata\": {},\r\n     \"output_type\": \"execute_result\"\r\n    }\r\n   ],\r\n   \"source\": [\r\n    \"scores = cross_validate(model, X_train, y_train, cv=10, return_train_score=True)\\n\",\r\n    \"print(\\\"Mean validation score %0.3f\\\" % (np.mean(scores[\\\"test_score\\\"])))\\n\",\r\n    \"print(\\\"Mean train score %0.3f\\\" % (np.mean(scores[\\\"train_score\\\"])))\\n\",\r\n    \"pd.DataFrame(scores)\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"markdown\",\r\n   \"metadata\": {},\r\n   \"source\": [\r\n    \"They are the same. The splitting is done identically to the previous part, with StratifiedKFold with no shuffling. Hence the corresponding folds are the same as in the previous part, and therefore the fitted models, and their accuracies are identical. \"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"markdown\",\r\n   \"metadata\": {},\r\n   \"source\": [\r\n    \"#### 2(e)\\n\",\r\n    \"rubric={points:1}\\n\",\r\n    \"\\n\",\r\n    \"Do you see a significant difference between the training score and the cross-validation score? Briefly discuss.\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"markdown\",\r\n   \"metadata\": {\r\n    \"nbgrader\": {\r\n     \"grade\": true,\r\n     \"grade_id\": \"cell-a89757274fc5586f\",\r\n     \"locked\": false,\r\n     \"points\": 0,\r\n     \"schema_version\": 3,\r\n     \"solution\": true,\r\n     \"task\": false\r\n    }\r\n   },\r\n   \"source\": [\r\n    \"The difference is not large. The small difference implies that the model is not overfit.\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"markdown\",\r\n   \"metadata\": {},\r\n   \"source\": [\r\n    \"#### 2(f)\\n\",\r\n    \"rubric={points:1}\\n\",\r\n    \"\\n\",\r\n    \"Inspect the 10 sub-scores from the 10 folds of cross-validation. How does this inform the trustworthiness of your cross validation score?\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"markdown\",\r\n   \"metadata\": {\r\n    \"nbgrader\": {\r\n     \"grade\": true,\r\n     \"grade_id\": \"cell-a89757274fc5586f\",\r\n     \"locked\": false,\r\n     \"points\": 0,\r\n     \"schema_version\": 3,\r\n     \"solution\": true,\r\n     \"task\": false\r\n    }\r\n   },\r\n   \"source\": []\r\n  },\r\n  {\r\n   \"cell_type\": \"markdown\",\r\n   \"metadata\": {\r\n    \"nbgrader\": {\r\n     \"grade\": false,\r\n     \"grade_id\": \"cell-4150979c1845a18c\",\r\n     \"locked\": true,\r\n     \"schema_version\": 3,\r\n     \"solution\": false,\r\n     \"task\": false\r\n    }\r\n   },\r\n   \"source\": [\r\n    \"## Exercise 3: Hyperparameters \\n\",\r\n    \"rubric={points:10}\\n\",\r\n    \"\\n\",\r\n    \"In this exercise, you'll experiment with the `max_depth` hyperparameter of the decision tree classifier. See the [`DecisionTreeClassifier` documentation](https://scikit-learn.org/stable/modules/generated/sklearn.tree.DecisionTreeClassifier.html) for more details.\\n\",\r\n    \"\\n\",\r\n    \"- Explore the `max_depth` hyperparameter. Run 10-fold cross-validation for trees with different values of `max_depth` (at least 10 different values in the range 1 to 25).\\n\",\r\n    \"- For each `max_depth`, get both the train accuracy and the cross-validation accuracy.\\n\",\r\n    \"- Make a plot with `max_depth` on the *x*-axis and the train and cross-validation scores on the *y*-axis. That is, your plot should have two curves, one for train and one for cross-validation. Include a legend to specify which is which.\\n\",\r\n    \"- Discuss how changing the `max_depth` hyperparameter affects the training and cross-validation accuracy. From these results, what depth would you pick as the optimal depth? \\n\",\r\n    \"- Do you think that the depth you chose would generalize to other \\\"spotify\\\" datasets (i.e., data on other spotify users)?\\n\",\r\n    \"\\n\",\r\n    \"> Note: generally speaking (for all assignments) you are welcome to copy/paste code directly from the lecture notes, though I ask that you add a small citation (e.g. \\\"Adapted from lecture 2\\\") if you do so.\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 106,\r\n   \"metadata\": {},\r\n   \"outputs\": [\r\n    {\r\n     \"data\": {\r\n      \"image/png\": \"\\n\",\r\n      \"text/plain\": [\r\n       \"<Figure size 432x288 with 1 Axes>\"\r\n      ]\r\n     },\r\n     \"metadata\": {\r\n      \"needs_background\": \"light\"\r\n     },\r\n     \"output_type\": \"display_data\"\r\n    }\r\n   ],\r\n   \"source\": [\r\n    \"train_accuracies = []\\n\",\r\n    \"validation_accuracies = []\\n\",\r\n    \"max_depths = range(1, 26)\\n\",\r\n    \"\\n\",\r\n    \"for max_depth in max_depths:\\n\",\r\n    \"    model = DecisionTreeClassifier(max_depth=max_depth)\\n\",\r\n    \"    scores = cross_validate(model, X_train, y_train, cv=10, return_train_score=True)\\n\",\r\n    \"    validation_accuracies.append(np.mean(scores[\\\"test_score\\\"]))\\n\",\r\n    \"    train_accuracies.append(np.mean(scores[\\\"train_score\\\"]))\\n\",\r\n    \"    \\n\",\r\n    \"    \\n\",\r\n    \"plt.plot(max_depths, train_accuracies, label='train')\\n\",\r\n    \"plt.plot(max_depths, validation_accuracies, label='validation')\\n\",\r\n    \"plt.xlabel(\\\"max depth\\\")\\n\",\r\n    \"plt.ylabel(\\\"accuracy\\\")\\n\",\r\n    \"plt.title(\\\"Train and Cross-Validation Accuracy vs. Max Depth of Decision Tree\\\")\\n\",\r\n    \"plt.legend(loc=\\\"right\\\")\\n\",\r\n    \"plt.show()\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"markdown\",\r\n   \"metadata\": {},\r\n   \"source\": [\r\n    \"## Exercise 4: Test set\\n\",\r\n    \"rubric={points:4}\\n\",\r\n    \"\\n\",\r\n    \"Remember the test set you created way back at the beginning of this assignment? Let's use it now to see if our cross-validation score from the previous exercise is trustworthy. \\n\",\r\n    \"\\n\",\r\n    \"- Select your favorite `max_depth` from the previous part.\\n\",\r\n    \"- Train a decision tree classifier using that `max_depth` on the _entire training set_.\\n\",\r\n    \"- Compute and display the test score. \\n\",\r\n    \"- How does it compare to the cross-validation score from the previous exercise? Briefly discuss. \"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"markdown\",\r\n   \"metadata\": {},\r\n   \"source\": []\r\n  },\r\n  {\r\n   \"cell_type\": \"markdown\",\r\n   \"metadata\": {},\r\n   \"source\": [\r\n    \"## Exercise 5: Conceptual questions\\n\",\r\n    \"rubric={points:3}\\n\",\r\n    \"\\n\",\r\n    \"Consider the dataset below, which has $6$ examples and $2$ features:\\n\",\r\n    \"\\n\",\r\n    \"$$ X = \\\\begin{bmatrix}5 & 2\\\\\\\\4 & 3\\\\\\\\  2 & 2\\\\\\\\ 10 & 10\\\\\\\\ 9 & -1\\\\\\\\ 9& 9\\\\end{bmatrix}, \\\\quad y = \\\\begin{bmatrix}-1\\\\\\\\-1\\\\\\\\+1\\\\\\\\+1\\\\\\\\+1\\\\\\\\+1\\\\end{bmatrix}.$$\\n\",\r\n    \"\\n\",\r\n    \"1. Say we fit a decision stump (depth 1 decision tree) and the first split is on the first feature (left column) being less than 5.5. What would we predict in the \\\"true\\\" and \\\"false\\\" cases here?\\n\",\r\n    \"2. What training accuracy would the above stump get on this data set?\\n\",\r\n    \"3. Can we obtain 100% accuracy with a single decision stump in this particular example?\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"markdown\",\r\n   \"metadata\": {},\r\n   \"source\": []\r\n  },\r\n  {\r\n   \"cell_type\": \"markdown\",\r\n   \"metadata\": {},\r\n   \"source\": [\r\n    \"## Submission instructions \\n\",\r\n    \"\\n\",\r\n    \"**PLEASE READ:** When you are ready to submit your assignment do the following:\\n\",\r\n    \"\\n\",\r\n    \"1. Run all cells in your notebook to make sure there are no errors by doing `Kernel -> Restart Kernel and Clear All Outputs` and then `Run -> Run All Cells`. \\n\",\r\n    \"2. Notebooks with cell execution numbers out of order or not starting from “1” will have marks deducted. Notebooks without the output displayed may not be graded at all (because we need to see the output in order to grade your work).\\n\",\r\n    \"3. Upload the assignment using Gradescope's drag and drop tool. Check out this [Gradescope Student Guide](https://lthub.ubc.ca/guides/gradescope-student-guide/) if you need help with Gradescope submission. \"\r\n   ]\r\n  }\r\n ],\r\n \"metadata\": {\r\n  \"anaconda-cloud\": {},\r\n  \"celltoolbar\": \"Create Assignment\",\r\n  \"kernelspec\": {\r\n   \"display_name\": \"Python 3 (ipykernel)\",\r\n   \"language\": \"python\",\r\n   \"name\": \"python3\"\r\n  },\r\n  \"language_info\": {\r\n   \"codemirror_mode\": {\r\n    \"name\": \"ipython\",\r\n    \"version\": 3\r\n   },\r\n   \"file_extension\": \".py\",\r\n   \"mimetype\": \"text/x-python\",\r\n   \"name\": \"python\",\r\n   \"nbconvert_exporter\": \"python\",\r\n   \"pygments_lexer\": \"ipython3\",\r\n   \"version\": \"3.10.4\"\r\n  }\r\n },\r\n \"nbformat\": 4,\r\n \"nbformat_minor\": 4\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/hw/hw2/hw2.ipynb b/hw/hw2/hw2.ipynb
--- a/hw/hw2/hw2.ipynb	(revision 886ad67ab46efeae3f42e9050a89cb42dc143f11)
+++ b/hw/hw2/hw2.ipynb	(date 1653144112000)
@@ -14,7 +14,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 9,
+   "execution_count": 1,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -88,7 +88,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 3,
+   "execution_count": 2,
    "metadata": {
     "nbgrader": {
      "grade": true,
@@ -119,7 +119,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 4,
+   "execution_count": 3,
    "metadata": {},
    "outputs": [
     {
@@ -128,7 +128,7 @@
        "((1512, 16), (505, 16))"
       ]
      },
-     "execution_count": 4,
+     "execution_count": 3,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -162,7 +162,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 5,
+   "execution_count": 4,
    "metadata": {},
    "outputs": [
     {
@@ -206,7 +206,7 @@
        "'speechiness'"
       ]
      },
-     "execution_count": 5,
+     "execution_count": 4,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -272,12 +272,12 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 20,
+   "execution_count": 5,
    "metadata": {},
    "outputs": [
     {
      "data": {
-      "image/png": "\n",
+      "image/png": "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\n",
       "text/plain": [
        "<Figure size 432x288 with 1 Axes>"
       ]
@@ -289,7 +289,7 @@
     },
     {
      "data": {
-      "image/png": "\n",
+      "image/png": "\n",
       "text/plain": [
        "<Figure size 432x288 with 1 Axes>"
       ]
@@ -301,7 +301,7 @@
     },
     {
      "data": {
-      "image/png": "\n",
+      "image/png": "\n",
       "text/plain": [
        "<Figure size 432x288 with 1 Axes>"
       ]
@@ -313,7 +313,7 @@
     },
     {
      "data": {
-      "image/png": "\n",
+      "image/png": "\n",
       "text/plain": [
        "<Figure size 432x288 with 1 Axes>"
       ]
@@ -398,7 +398,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 21,
+   "execution_count": 6,
    "metadata": {},
    "outputs": [
     {
@@ -465,7 +465,7 @@
        "1624  Save the World - Radio Mix  Swedish House Mafia"
       ]
      },
-     "execution_count": 21,
+     "execution_count": 6,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -544,7 +544,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 97,
+   "execution_count": 7,
    "metadata": {
     "nbgrader": {
      "grade": true,
@@ -563,7 +563,7 @@
        "DecisionTreeClassifier(max_depth=3)"
       ]
      },
-     "execution_count": 97,
+     "execution_count": 7,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -600,7 +600,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 98,
+   "execution_count": 8,
    "metadata": {},
    "outputs": [
     {
@@ -609,7 +609,7 @@
        "0"
       ]
      },
-     "execution_count": 98,
+     "execution_count": 8,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -620,7 +620,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 99,
+   "execution_count": 9,
    "metadata": {},
    "outputs": [
     {
@@ -629,7 +629,7 @@
        "0"
       ]
      },
-     "execution_count": 99,
+     "execution_count": 9,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -657,7 +657,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 100,
+   "execution_count": 10,
    "metadata": {},
    "outputs": [
     {
@@ -743,7 +743,7 @@
        "9          0.774834"
       ]
      },
-     "execution_count": 100,
+     "execution_count": 10,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -755,7 +755,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 101,
+   "execution_count": 11,
    "metadata": {},
    "outputs": [
     {
@@ -788,7 +788,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 102,
+   "execution_count": 12,
    "metadata": {},
    "outputs": [
     {
@@ -829,43 +829,43 @@
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
-       "      <td>0.004986</td>\n",
-       "      <td>0.001997</td>\n",
+       "      <td>0.005984</td>\n",
+       "      <td>0.000998</td>\n",
        "      <td>0.730263</td>\n",
        "      <td>0.726471</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
-       "      <td>0.005013</td>\n",
-       "      <td>0.000999</td>\n",
+       "      <td>0.006009</td>\n",
+       "      <td>0.001969</td>\n",
        "      <td>0.697368</td>\n",
        "      <td>0.726471</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
-       "      <td>0.004959</td>\n",
-       "      <td>0.001993</td>\n",
+       "      <td>0.004987</td>\n",
+       "      <td>0.000973</td>\n",
        "      <td>0.615894</td>\n",
        "      <td>0.736958</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3</th>\n",
-       "      <td>0.004985</td>\n",
-       "      <td>0.000998</td>\n",
+       "      <td>0.005987</td>\n",
+       "      <td>0.001000</td>\n",
        "      <td>0.662252</td>\n",
        "      <td>0.736958</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4</th>\n",
-       "      <td>0.004987</td>\n",
-       "      <td>0.001995</td>\n",
+       "      <td>0.005013</td>\n",
+       "      <td>0.000998</td>\n",
        "      <td>0.708609</td>\n",
        "      <td>0.731815</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5</th>\n",
-       "      <td>0.004986</td>\n",
-       "      <td>0.000998</td>\n",
+       "      <td>0.004987</td>\n",
+       "      <td>0.001995</td>\n",
        "      <td>0.682119</td>\n",
        "      <td>0.734754</td>\n",
        "    </tr>\n",
@@ -878,22 +878,22 @@
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7</th>\n",
-       "      <td>0.004986</td>\n",
+       "      <td>0.008006</td>\n",
        "      <td>0.001995</td>\n",
        "      <td>0.708609</td>\n",
        "      <td>0.745775</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8</th>\n",
-       "      <td>0.004987</td>\n",
-       "      <td>0.000997</td>\n",
+       "      <td>0.004959</td>\n",
+       "      <td>0.000998</td>\n",
        "      <td>0.728477</td>\n",
        "      <td>0.745040</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9</th>\n",
-       "      <td>0.004987</td>\n",
-       "      <td>0.000997</td>\n",
+       "      <td>0.005013</td>\n",
+       "      <td>0.000998</td>\n",
        "      <td>0.774834</td>\n",
        "      <td>0.724467</td>\n",
        "    </tr>\n",
@@ -903,24 +903,25 @@
       ],
       "text/plain": [
        "   fit_time  score_time  test_score  train_score\n",
-       "0  0.004986    0.001997    0.730263     0.726471\n",
-       "1  0.005013    0.000999    0.697368     0.726471\n",
-       "2  0.004959    0.001993    0.615894     0.736958\n",
-       "3  0.004985    0.000998    0.662252     0.736958\n",
-       "4  0.004987    0.001995    0.708609     0.731815\n",
-       "5  0.004986    0.000998    0.682119     0.734754\n",
+       "0  0.005984    0.000998    0.730263     0.726471\n",
+       "1  0.006009    0.001969    0.697368     0.726471\n",
+       "2  0.004987    0.000973    0.615894     0.736958\n",
+       "3  0.005987    0.001000    0.662252     0.736958\n",
+       "4  0.005013    0.000998    0.708609     0.731815\n",
+       "5  0.004987    0.001995    0.682119     0.734754\n",
        "6  0.004986    0.000998    0.715232     0.736958\n",
-       "7  0.004986    0.001995    0.708609     0.745775\n",
-       "8  0.004987    0.000997    0.728477     0.745040\n",
-       "9  0.004987    0.000997    0.774834     0.724467"
+       "7  0.008006    0.001995    0.708609     0.745775\n",
+       "8  0.004959    0.000998    0.728477     0.745040\n",
+       "9  0.005013    0.000998    0.774834     0.724467"
       ]
      },
-     "execution_count": 102,
+     "execution_count": 12,
      "metadata": {},
      "output_type": "execute_result"
     }
    ],
    "source": [
+    "# Adapted from lecture 4\n",
     "scores = cross_validate(model, X_train, y_train, cv=10, return_train_score=True)\n",
     "print(\"Mean validation score %0.3f\" % (np.mean(scores[\"test_score\"])))\n",
     "print(\"Mean train score %0.3f\" % (np.mean(scores[\"train_score\"])))\n",
@@ -1015,23 +1016,201 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 106,
+   "execution_count": 13,
    "metadata": {},
    "outputs": [
     {
      "data": {
-      "image/png": "\n",
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>train_accuracies</th>\n",
+       "      <th>validation_accuracies</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th>1</th>\n",
+       "      <td>0.657113</td>\n",
+       "      <td>0.652771</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>2</th>\n",
+       "      <td>0.716491</td>\n",
+       "      <td>0.700379</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>3</th>\n",
+       "      <td>0.734567</td>\n",
+       "      <td>0.701704</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>4</th>\n",
+       "      <td>0.770210</td>\n",
+       "      <td>0.718935</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>5</th>\n",
+       "      <td>0.793871</td>\n",
+       "      <td>0.700379</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>6</th>\n",
+       "      <td>0.826205</td>\n",
+       "      <td>0.711650</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>7</th>\n",
+       "      <td>0.861405</td>\n",
+       "      <td>0.699085</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>8</th>\n",
+       "      <td>0.893738</td>\n",
+       "      <td>0.699778</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>9</th>\n",
+       "      <td>0.922692</td>\n",
+       "      <td>0.694475</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>10</th>\n",
+       "      <td>0.947898</td>\n",
+       "      <td>0.685200</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>11</th>\n",
+       "      <td>0.966343</td>\n",
+       "      <td>0.683213</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>12</th>\n",
+       "      <td>0.980306</td>\n",
+       "      <td>0.674608</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>13</th>\n",
+       "      <td>0.988757</td>\n",
+       "      <td>0.673954</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>14</th>\n",
+       "      <td>0.993166</td>\n",
+       "      <td>0.680564</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>15</th>\n",
+       "      <td>0.996179</td>\n",
+       "      <td>0.678586</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>16</th>\n",
+       "      <td>0.997796</td>\n",
+       "      <td>0.684537</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>17</th>\n",
+       "      <td>0.998383</td>\n",
+       "      <td>0.673954</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>18</th>\n",
+       "      <td>0.998677</td>\n",
+       "      <td>0.681888</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>19</th>\n",
+       "      <td>0.999118</td>\n",
+       "      <td>0.677266</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>20</th>\n",
+       "      <td>0.999192</td>\n",
+       "      <td>0.677274</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>21</th>\n",
+       "      <td>0.999339</td>\n",
+       "      <td>0.673279</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>22</th>\n",
+       "      <td>0.999412</td>\n",
+       "      <td>0.676582</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>23</th>\n",
+       "      <td>0.999412</td>\n",
+       "      <td>0.676603</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>24</th>\n",
+       "      <td>0.999412</td>\n",
+       "      <td>0.680564</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>25</th>\n",
+       "      <td>0.999412</td>\n",
+       "      <td>0.684542</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "</div>"
+      ],
       "text/plain": [
-       "<Figure size 432x288 with 1 Axes>"
+       "    train_accuracies  validation_accuracies\n",
+       "1           0.657113               0.652771\n",
+       "2           0.716491               0.700379\n",
+       "3           0.734567               0.701704\n",
+       "4           0.770210               0.718935\n",
+       "5           0.793871               0.700379\n",
+       "6           0.826205               0.711650\n",
+       "7           0.861405               0.699085\n",
+       "8           0.893738               0.699778\n",
+       "9           0.922692               0.694475\n",
+       "10          0.947898               0.685200\n",
+       "11          0.966343               0.683213\n",
+       "12          0.980306               0.674608\n",
+       "13          0.988757               0.673954\n",
+       "14          0.993166               0.680564\n",
+       "15          0.996179               0.678586\n",
+       "16          0.997796               0.684537\n",
+       "17          0.998383               0.673954\n",
+       "18          0.998677               0.681888\n",
+       "19          0.999118               0.677266\n",
+       "20          0.999192               0.677274\n",
+       "21          0.999339               0.673279\n",
+       "22          0.999412               0.676582\n",
+       "23          0.999412               0.676603\n",
+       "24          0.999412               0.680564\n",
+       "25          0.999412               0.684542"
       ]
      },
-     "metadata": {
-      "needs_background": "light"
-     },
-     "output_type": "display_data"
+     "execution_count": 13,
+     "metadata": {},
+     "output_type": "execute_result"
     }
    ],
    "source": [
+    "# Adapted from lecture 3\n",
+    "\n",
     "train_accuracies = []\n",
     "validation_accuracies = []\n",
     "max_depths = range(1, 26)\n",
@@ -1041,18 +1220,50 @@
     "    scores = cross_validate(model, X_train, y_train, cv=10, return_train_score=True)\n",
     "    validation_accuracies.append(np.mean(scores[\"test_score\"]))\n",
     "    train_accuracies.append(np.mean(scores[\"train_score\"]))\n",
-    "    \n",
-    "    \n",
-    "plt.plot(max_depths, train_accuracies, label='train')\n",
-    "plt.plot(max_depths, validation_accuracies, label='validation')\n",
+    "\n",
+    "pd.DataFrame(\n",
+    "    {\"train_accuracies\": train_accuracies, \"validation_accuracies\": validation_accuracies},\n",
+    "    index=max_depths\n",
+    ")"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 14,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "image/png": "\n",
+      "text/plain": [
+       "<Figure size 432x288 with 1 Axes>"
+      ]
+     },
+     "metadata": {
+      "needs_background": "light"
+     },
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "plt.plot(max_depths, train_accuracies, label='train accuracy')\n",
+    "plt.plot(max_depths, validation_accuracies, label='validation accuracy')\n",
     "plt.xlabel(\"max depth\")\n",
-    "plt.ylabel(\"accuracy\")\n",
+    "plt.ylabel(\"mean accuracy\")\n",
     "plt.title(\"Train and Cross-Validation Accuracy vs. Max Depth of Decision Tree\")\n",
     "plt.legend(loc=\"right\")\n",
     "plt.show()"
    ]
   },
   {
+   "cell_type": "markdown",
+   "metadata": {},
+   "source": [
+    "I would pick 4 as the optimal depth as it maximizes the validation accuracy.\n",
+    "At the depth of 4, the difference between the validation score and the train score is small, and the model would probably not overfit. Therefore the model would likely generalize to other datasets."
+   ]
+  },
+  {
    "cell_type": "markdown",
    "metadata": {},
    "source": [
@@ -1068,9 +1279,33 @@
    ]
   },
   {
+   "cell_type": "code",
+   "execution_count": 15,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "0.7029702970297029"
+      ]
+     },
+     "execution_count": 15,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "model = DecisionTreeClassifier(max_depth=4)\n",
+    "model.fit(X_train, y_train)\n",
+    "model.score(X_test, y_test)"
+   ]
+  },
+  {
    "cell_type": "markdown",
    "metadata": {},
-   "source": []
+   "source": [
+    "0.702 vs 0.703. The cross-validation scores are very close. It implies the model generalizes."
+   ]
   },
   {
    "cell_type": "markdown",
@@ -1091,7 +1326,11 @@
   {
    "cell_type": "markdown",
    "metadata": {},
-   "source": []
+   "source": [
+    "1. true, true, true, false, false, false\n",
+    "2. 1/6, 16.67%\n",
+    "3. No"
+   ]
   },
   {
    "cell_type": "markdown",
@@ -1111,9 +1350,9 @@
   "anaconda-cloud": {},
   "celltoolbar": "Create Assignment",
   "kernelspec": {
-   "display_name": "Python 3 (ipykernel)",
+   "display_name": "Python [conda env:cpsc330]",
    "language": "python",
-   "name": "python3"
+   "name": "conda-env-cpsc330-py"
   },
   "language_info": {
    "codemirror_mode": {
